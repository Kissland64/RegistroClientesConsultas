@page "/RegistroClientes"
@using System.ComponentModel.DataAnnotations

<h3>Clientes</h3>

<form>
    <div class="form-group">
        <label for="nombre">Nombre:</label>
        <input type="text" class="form-control" @bind="@cliente.Nombre" />
        <ValidationMessage For="@(() => cliente.Nombre)" />
    </div>
    <div class="form-group">
        <label for="telefono">Telefono:</label>
        <input type="text" class="form-control" @bind="@cliente.Telefono" />
        <ValidationMessage For="@(() => cliente.Telefono)" />
    </div>
    <div class="form-group">
        <label for="celular">Celular:</label>
        <input type="text" class="form-control" @bind="@cliente.Celular" />
        <ValidationMessage For="@(() => cliente.Celular)" />
    </div>
    <div class="form-group">
        <label for="rnc">RNC:</label>
        <input type="text" class="form-control" @bind="@cliente.RNC" />
        <ValidationMessage For="@(() => cliente.RNC)" />
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" class="form-control" @bind="@cliente.Email" />
        <ValidationMessage For="@(() => cliente.Email)" />
    </div>
    <div class="form-group">
        <label for="direccion">Direcci√≥n:</label>
        <input type="text" class="form-control" @bind="@cliente.Direccion" />
        <ValidationMessage For="@(() => cliente.Direccion)" />
    </div>

    <button type="button" class="btn btn-primary" @onclick="AgregarCliente">Agregar Cliente</button>
</form>

@code {
    private List<Clientes> clientes = new List<Clientes>();
    private Clientes cliente = new Clientes();

    private void AgregarCliente()
    {
        if (ValidarCliente(cliente))
        {
            clientes.Add(cliente);
            cliente = new Clientes();
        }
    }

    private bool ValidarCliente(Clientes cliente)
    {
        var context = new ValidationContext(cliente, serviceProvider: null, items: null);
        var results = new List<ValidationResult>();

        if (!Validator.TryValidateObject(cliente, context, results, validateAllProperties: true))
        {
            foreach (var validationResult in results)
            {
                Console.WriteLine(validationResult.ErrorMessage);
            }

            return false;
        }

        if (clientes.Any(c => c.Nombre == cliente.Nombre))
        {
            Console.WriteLine("Ya existe un cliente con el mismo nombre.");
            return false;
        }

        if (clientes.Any(c => c.RNC == cliente.RNC))
        {
            Console.WriteLine("Ya existe un cliente con el mismo RNC.");
            return false;
        }

        return true;
    }
}
